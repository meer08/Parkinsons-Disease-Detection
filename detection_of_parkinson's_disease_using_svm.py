# -*- coding: utf-8 -*-
"""Detection_of_Parkinson's_disease_using_SVM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-ME20xuHa7gdRHtIbyRvTAa-P02TeSmU
"""

#Data Pre-processing Step  
# importing libraries  
import numpy as nm  
import matplotlib.pyplot as mtp  
import pandas as pd  
from sklearn.preprocessing import MinMaxScaler

from google.colab import files
uploadedfiles=files.upload()

data = pd.read_csv('parkinsons.data')
data.head()

features=data.loc[:,data.columns!='status'].values[:,1:]
labels=data.loc[:,'status'].values

scaler=MinMaxScaler((-1,1))
x=scaler.fit_transform(features)
y=labels

# Splitting the dataset into training and test set.  
from sklearn.model_selection import train_test_split  
x_train, x_test, y_train, y_test= train_test_split(x, y, test_size= 0.25, random_state=0)

#feature Scaling  
from sklearn.preprocessing import StandardScaler    
st_x= StandardScaler()    
x_train= st_x.fit_transform(x_train)    
x_test= st_x.transform(x_test)

from sklearn.svm import SVC # "Support vector classifier"  
classifier = SVC(kernel='linear', random_state=0)  
classifier.fit(x_train, y_train)

#Predicting the test set result  
y_pred= classifier.predict(x_test)

#Creating the Confusion matrix  
from sklearn.metrics import confusion_matrix  
cm= confusion_matrix(y_test, y_pred)  
print(cm)

from sklearn import metrics
print('Accuracy: ',metrics.accuracy_score(y_test, y_pred))